{"version":3,"sources":["assets/img/theboxapp.png","components/TodoApp.js","components/Main.js","components/Policy.js","App.js","serviceWorker.js","index.js","FirebaseConfig.js","assets/img/duck.svg","assets/img/profile.jpg","assets/img/facebook.svg","assets/img/instagram.svg","assets/img/twitter.svg"],"names":["module","exports","TodoApp","props","state","items","text","handleChange","bind","handleSubmit","firebase","ref","on","snapshot","dataTodo","forEach","productSnapshot","data","val","push","key","status","date","setState","Form","inline","FormGroup","className","Input","id","onChange","this","value","placeholder","Button","onClick","length","e","target","preventDefault","dataRef","Date","now","then","console","log","catch","React","Component","TodoList","event","isChecked","checked","update","map","item","type","defaultChecked","Main","src","duck","alt","href","rel","profile","facebook","instagram","twitter","to","Policy","Badge","color","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f37e0fbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/theboxapp.5e2a8be8.png\";","import { Button, Form, FormGroup, Label, Input, Fade } from 'reactstrap';\r\nimport React from 'react';\r\nimport * as firebase from 'firebase';\r\nimport './TodoApp.css';\r\n\r\nexport default class TodoApp extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n          items: [], \r\n          text: '' };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n      const dataList = firebase.database().ref('todo');\r\n      dataList.on('value', (snapshot) => {\r\n        let dataTodo = [];  \r\n        snapshot.forEach(productSnapshot => {\r\n          let data = productSnapshot.val();\r\n          dataTodo.push({\r\n            key:productSnapshot.key,\r\n            text:data.text,\r\n            status:data.status,\r\n            date:data.date\r\n          });\r\n      });\r\n        this.setState({\r\n          items: dataTodo\r\n        });\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>TO DO</h1>\r\n            <Form inline>\r\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                    <Input id=\"new-todo\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.text} placeholder=\"What needs to be done?\"/>\r\n                </FormGroup>\r\n                <Button onClick={this.handleSubmit}>Add #{this.state.items.length + 1}</Button>\r\n            </Form>\r\n            <TodoList items={this.state.items} />\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    handleChange(e) {\r\n      this.setState({ text: e.target.value });\r\n    }\r\n  \r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      const dataRef = firebase.database()\r\n      if (this.state.text.length === 0) {\r\n        return;\r\n      }\r\n      dataRef.ref(\"todo\").push({\r\n          text: this.state.text,\r\n          status: false,\r\n          date: Date.now()\r\n        }).then(function () {\r\n          console.log(\"success\")\r\n          }, function () {\r\n          console.log('rejected promise')\r\n      }).catch((e) => console.log(e))\r\n    }\r\n  }\r\n\r\n  class TodoList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n      const dataRef = firebase.database()\r\n      console.log(event.target.value)\r\n      const key = event.target.value\r\n      const isChecked = event.target.checked;\r\n\r\n      dataRef.ref(\"todo/\"+key).update({\r\n        status: isChecked\r\n      }).then(function () {\r\n        console.log(\"success\")\r\n        }, function () {\r\n        console.log('rejected promise')\r\n      }).catch((e) => console.log(e))\r\n\r\n      console.log(isChecked)\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"align-left\">\r\n          <ul>\r\n            {this.props.items.map(item => (\r\n              <li key={item.key}><Input type=\"checkbox\" value={item.key} defaultChecked={item.status} onChange={this.handleChange}/>{item.text}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  ","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport duck from '../assets/img/duck.svg';\r\nimport profile from '../assets/img/profile.jpg';\r\nimport facebook from '../assets/img/facebook.svg';\r\nimport instagram from '../assets/img/instagram.svg';\r\nimport twitter from '../assets/img/twitter.svg';\r\nimport '../App.css';\r\nimport './Main.css'\r\n// import { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport TodoApp from './TodoApp';\r\nimport logoboxshop from '../assets/img/theboxapp.png'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n            <section>\r\n              <header className=\"App-header\">\r\n                <img src={duck} className=\"App-logo\" alt=\"logo\" />\r\n                <p>\r\n                  Edit <code>src/App.js</code> and save to reload.\r\n                </p>\r\n                <a\r\n                  className=\"App-link\"\r\n                  href=\"https://duckfollowtk.github.io/duck-follow/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Learn React\r\n                </a>\r\n              </header>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                <img src={profile} className=\"img-circle img-profile\" alt=\"logo\" />\r\n                <p>\r\n                  Prasit Suphancho\r\n                </p>\r\n                <div>\r\n                  <a href=\"https://www.facebook.com/prasit.suphancho\">\r\n                    <img src={facebook} className=\"social-width\" alt=\"logo\" />\r\n                  </a>\r\n                  <a href=\"https://www.instagram.com/tankps/\">\r\n                    <img src={instagram} className=\"social-width\" alt=\"logo\" />\r\n                  </a>\r\n                  <a href=\"https://twitter.com/slammonder\">\r\n                    <img src={twitter} className=\"social-width\" alt=\"logo\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                <h1>made application</h1>\r\n                <div>\r\n                  {/* <a href=\"\">\r\n                    <img src={logoboxshop} className=\"app-icon\" alt=\"logo\" />\r\n                  </a>\r\n                  <a href=\"\">\r\n                    <img src={logoboxshop} className=\"app-icon\" alt=\"logo\" />\r\n                  </a>\r\n                  <a href=\"\">\r\n                    <img src={logoboxshop} className=\"app-icon\" alt=\"logo\" />\r\n                  </a> */}\r\n                </div>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                <TodoApp/>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                <Link to=\"/policy-privacy\">policy-privacy</Link>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        );\r\n      }\r\n}","import React from 'react';\r\nimport './Policy.css';\r\nimport { Badge } from 'reactstrap';\r\n\r\nexport default class Policy extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"App-content\">\r\n                    <h1>Policy <Badge color=\"secondary\">privacy</Badge></h1>\r\n                </div>\r\n                <div className=\"App-content\">\r\n                    <h3>เมื่อคุณใช้บริการของเรา คุณไว้วางใจให้เรารักษาข้อมูลของคุณ <br/> เราเข้าใจว่านี่คือความรับผิดชอบที่ยิ่งใหญ่<br/>และพยายามอย่างยิ่งที่จะปกป้องข้อมูลของคุณ <br/> รวมถึงมอบอำนาจในการควบคุมข้อมูลให้แก่คุณ</h3>\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n}","import React from 'react';\r\nimport { HashRouter, Route, Link } from \"react-router-dom\";\r\nimport Main from './components/Main'\r\nimport Policy from './components/Policy'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    // <Router>\r\n    //   <Route path=\"/\" exact component={Main}/>\r\n    //   <Route path=\"/duck-follow\" exact component={Main}/>\r\n    //   <Route path=\"/duck-follow/policy-privacy\" exact component={Policy}/>\r\n    // </Router>\r\n    <HashRouter basename=\"/\">\r\n    <div>\r\n      {/* <ul>\r\n        <li><Link to=\"/\">Home</Link></li>\r\n        <li><Link to=\"/about\">About</Link></li>\r\n      </ul>\r\n\r\n      <hr /> */}\r\n\r\n      <Route exact path=\"/\" component={Main} />\r\n      <Route path=\"/policy-privacy\" component={Policy} />\r\n    </div>\r\n  </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\r\nimport * as firebase from \"firebase/app\";\r\n// import \"firebase/auth\";\r\n// import {\r\n//   FirebaseAuthProvider,\r\n//   FirebaseAuthConsumer,\r\n//   IfFirebaseAuthed,\r\n//   IfFirebaseAuthedAnd\r\n// } from \"@react-firebase/auth\";\r\n\r\nimport { firebaseConfig } from \"./FirebaseConfig\";\r\n\r\nReactDOM.render(\r\n  <FirebaseDatabaseProvider {...firebaseConfig} firebase={firebase}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </FirebaseDatabaseProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyCEzUYXFx4zS4t_GiRGcalbB1d5yNHC5GE\",\r\n    authDomain: \"strange-descent-177108.firebaseapp.com\",\r\n    databaseURL: \"https://strange-descent-177108.firebaseio.com\",\r\n    projectId: \"strange-descent-177108\",\r\n    storageBucket: \"strange-descent-177108.appspot.com\",\r\n    messagingSenderId: \"694246627101\",\r\n    appId: \"1:694246627101:web:8ada8096e2950e19\"\r\n  };\r\n","module.exports = __webpack_public_path__ + \"static/media/duck.7cb5d820.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.b9ec4ef9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.06468580.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.62593ffa.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.f58833da.svg\";"],"sourceRoot":""}