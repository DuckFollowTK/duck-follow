{"version":3,"sources":["assets/img/profile.jpg","assets/img/facebook.svg","assets/img/instagram.svg","assets/img/twitter.svg","assets/img/github.svg","assets/img/android_logo.svg","assets/img/KU_Logo.png","logo2.svg","assets/img/sport.svg","assets/img/shield.svg","assets/img/duck.svg","assets/img/theboxapp.png","assets/img/bin.svg","assets/img/success.svg","components/TodoApp.js","components/TodoList.js","components/Timeline.js","components/Board.js","components/ProgressView.js","components/Covid19.js","components/Main.js","components/Policy.js","App.js","serviceWorker.js","index.js","FirebaseConfig.js"],"names":["module","exports","TodoApp","React","Component","props","state","text","handleChange","bind","handleSubmit","Form","inline","FormGroup","className","Input","id","onChange","this","value","placeholder","Button","onClick","e","setState","target","preventDefault","dataRef","firebase","context","length","date","Date","toISOString","console","log","slice","ref","push","status","then","catch","Timeline","slidesPerView","grabCursor","loop","direction","watchOverflow","autoplay","pagination","el","type","clickable","breakpoints","250","1024","activeSlideKey","key","style","width","height","src","ku_logo","android_logo","getItemStyle","isDragging","draggableStyle","userSelect","margin","borderRadius","background","getListStyle","isDraggingOver","padding","minHeight","Broard","id2List","droppable","droppable2","getList","onDragEnd","result","source","destination","key_value","draggableId","droppableId","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","index","selected","droppableSource","droppableDestination","sourceClone","destClone","move","update","handleRemove","event","child","remove","isChecked","checked","on","snapshot","dataTodo","dataCompete","forEach","productSnapshot","data","val","provided","innerRef","map","item","draggableProps","dragHandleProps","Card","borderColor","defaultChecked","CardBody","CardText","color","ProgressView","scrollProgress","scrollPx","document","documentElement","scrollTop","winHeightPx","scrollHeight","clientHeight","scrolled","window","addEventListener","removeEventListener","Progress","animated","Covid19","dateAll","confirmedAll","deathsAll","recoveredAll","confirmed","deaths","recovered","lastDate","lastConfirmed","lastDeaths","lastRecovered","isHidden","onSwitchChange","dateCovid","dataConfirmed","dataRecovered","dataDeaths","dateCovidAll","dataConfirmedAll","dataRecoveredAll","dataDeathsAll","sumConfirmed","sumRecovered","sumDeaths","fetch","response","json","property","d","split","dd","err","dataLine","labels","datasets","label","fill","hidden","lineTension","backgroundColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Container","fluid","Row","Col","md","class","legend","display","position","fullWidth","reverse","fontColor","options","bezierCurve","scales","xAxes","ticks","gridLines","drawBorder","yAxes","xs","CardTitle","CardSubtitle","Main","myRef","createRef","handleScrollToElement","day","getDay","month","getMonth","getDate","year","getFullYear","time","toLocaleTimeString","previous","isStopped","isPaused","speed","isClick","countingSecond","setInterval","timerId","timer","scrollTo","current","offsetTop","clearInterval","defaultOptions","animationData","rendererSettings","preserveAspectRatio","duckfollow","duck_logo","rel","sport","profile","alt","href","github","facebook","instagram","twitter","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","logo","to","Policy","shield","Badge","ScrollToTop","pathname","useLocation","useEffect","App","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.759e0cd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.b9ec4ef9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.06468580.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.62593ffa.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.f58833da.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.42d4d371.svg\";","module.exports = __webpack_public_path__ + \"static/media/android_logo.ac3421ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/KU_Logo.cc35a46b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo2.d22c693b.svg\";","module.exports = __webpack_public_path__ + \"static/media/sport.5249afb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield.315b768e.svg\";","module.exports = __webpack_public_path__ + \"static/media/duck.7cb5d820.svg\";","module.exports = __webpack_public_path__ + \"static/media/theboxapp.5e2a8be8.png\";","module.exports = __webpack_public_path__ + \"static/media/bin.650cdc57.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.d29f1779.svg\";","import { Button, Form, FormGroup, Label, Input, Fade } from 'reactstrap';\r\nimport React from 'react';\r\nimport * as firebase from 'firebase';\r\nimport './TodoApp.css';\r\nimport TodoList from './TodoList'\r\n\r\nexport default class TodoApp extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n          text: '' };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>TO DO</h1>\r\n            <div>\r\n              <Form inline>\r\n                  <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                    <Input id=\"new-todo\"\r\n                      onChange={this.handleChange}\r\n                      value={this.state.text} placeholder=\"What needs to be done?\"/>\r\n                    <Button className=\"btn-width\" onClick={this.handleSubmit}>Add</Button>\r\n                  </FormGroup> \r\n              </Form>\r\n              <p className=\"txt-discription\">*อยากให้ทำอะไรสร้างเพิ่มใน Task ได้เลยครับ</p>\r\n            </div>\r\n            {/* <TodoList/> */}\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    handleChange(e) {\r\n      this.setState({ text: e.target.value });\r\n    }\r\n  \r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      const dataRef = firebase.database()\r\n      const context = this\r\n      if (this.state.text.length === 0) {\r\n        return;\r\n      }\r\n      var d = new Date()\r\n      var date = d.toISOString()\r\n      console.log(date.slice(0,10))\r\n      dataRef.ref(\"todo\").push({\r\n          text: this.state.text,\r\n          status: false,\r\n          date: date.slice(0,10)\r\n        }).then(function () {\r\n          console.log(\"success\")\r\n          context.setState({text:''})\r\n          }, function () {\r\n          console.log('rejected promise')\r\n      }).catch((e) => console.log(e))\r\n    }\r\n  }\r\n  ","import { Button, Form, FormGroup, Label, Input, Fade } from 'reactstrap';\r\nimport React from 'react';\r\nimport * as firebase from 'firebase';\r\nimport './TodoApp.css';\r\n\r\nexport default class TodoList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          items: []};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n      const dataList = firebase.database().ref('todo');\r\n      dataList.on('value', (snapshot) => {\r\n        let dataTodo = [];  \r\n        snapshot.forEach(productSnapshot => {\r\n          let data = productSnapshot.val();\r\n          if (!data.status) {\r\n            dataTodo.push({\r\n                id:productSnapshot.key,\r\n                text:data.text,\r\n                status:data.status,\r\n                date:data.date\r\n            });\r\n          }\r\n      });\r\n        this.setState({\r\n          items: dataTodo\r\n        });\r\n      });\r\n    }\r\n\r\n    handleChange(event) {\r\n      const dataRef = firebase.database()\r\n      console.log(event.target.value)\r\n      const key_value = event.target.value\r\n      const isChecked = event.target.checked;\r\n\r\n      dataRef.ref(\"todo/\"+key_value).update({\r\n        status: isChecked\r\n      }).then(function () {\r\n        console.log(\"success\")\r\n        }, function () {\r\n        console.log('rejected promise')\r\n      }).catch((e) => console.log(e))\r\n    }\r\n\r\n    handleRemove(event) {\r\n      console.log(event.target.value)\r\n      const dataRef = firebase.database()\r\n      const key_value = event.target.value\r\n      dataRef.ref(\"todo\").child(key_value).remove();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"align-left\">\r\n          <ul>\r\n            {this.state.items.map(item => (\r\n              <Fade in={!item.status} tag=\"h5\" className=\"mt-3\"><li><Input type=\"checkbox\" value={item.id} defaultChecked={item.status} onChange={this.handleChange}/>{item.text} <Button value={item.id} onClick={this.handleRemove} outline color=\"danger\" size=\"sm\">ลบ</Button></li></Fade>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { useState } from 'react';\r\nimport * as firebase from 'firebase';\r\nimport './Timeline.css';\r\nimport Swiper from 'react-id-swiper';\r\nimport android_logo from '../assets/img/android_logo.svg'\r\nimport ku_logo from '../assets/img/KU_Logo.png'\r\n\r\nexport default class Timeline extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    render() {\r\n        const params = {\r\n            slidesPerView: 3,\r\n            grabCursor: true,\r\n            loop: false,\r\n            direction: 'horizontal',\r\n            watchOverflow: true,\r\n            autoplay: false,\r\n            pagination: {\r\n              el: '.swiper-pagination',\r\n              type: 'bullets',\r\n              clickable: true\r\n            },\r\n            breakpoints: {\r\n                250: {\r\n                    slidesPerView: 1,\r\n                    // spaceBetween: 20\r\n                },\r\n                // when window width is <= 1024px\r\n                1024: {\r\n                    slidesPerView: 2,\r\n                    // spaceBetween: 30\r\n                }\r\n            },\r\n          }\r\n\r\n      return (\r\n        <Swiper {...params} activeSlideKey='4'>\r\n            <div key='0' className=\"swiper-slide\">\r\n                <div className=\"timestamp\">\r\n                    <span className=\"date\">\r\n                    <div className=\"box\">\r\n                        <div style={{width:\"50px\",height:\"63.83px\"}}></div>\r\n                    </div>\r\n                    <br/>29 Apr 1996</span>\r\n                </div>\r\n                <div className=\"status\">\r\n                    <span>Birth's Day</span>\r\n                </div>\r\n            </div>\r\n            <div key='1' className=\"swiper-slide\">\r\n                <div className=\"timestamp\">\r\n                    <span className=\"date\">\r\n                        <div className=\"box\">\r\n                            <img width={50} src={ku_logo}/>\r\n                        </div>\r\n                        <br/>\r\n                        17 Aug 2013</span>\r\n                </div>\r\n                <div className=\"status\">\r\n                    <span>Birth's my son/Start University's Kasetsart</span>\r\n                </div>\r\n            </div>\r\n            <div key='2' className=\"swiper-slide\">\r\n                <div className=\"timestamp\">\r\n                    <span className=\"date\">\r\n                        <div className=\"box\">\r\n                            <div style={{width:\"50px\",height:\"63.83px\"}}></div>\r\n                        </div>\r\n                        <br/>\r\n                        14 May 2017 </span>\r\n                </div>\r\n                <div className=\"status\">\r\n                    <span>First JOB PHP Programmer</span>\r\n                </div>\r\n            </div>\r\n            <div key='3' className=\"swiper-slide\">\r\n                <div className=\"timestamp\">\r\n                    <span className=\"date\">\r\n                    <div className=\"box\">\r\n                        <div style={{width:\"50px\",height:\"63.83px\"}}></div>\r\n                    </div>\r\n                    <br/>\r\n                    1 May 2019</span>\r\n                </div>\r\n                <div className=\"status\">\r\n                    <span>\r\n                        <img src={android_logo} />\r\n                        <br/>\r\n                        Android/IOS Developer\r\n                    </span>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div key='4' className=\"swiper-slide\">\r\n                <div className=\"timestamp\">\r\n                    <span className=\"date\">\r\n                    <div className=\"box\">\r\n                        <div style={{width:\"50px\",height:\"63.83px\"}}></div>\r\n                    </div>\r\n                    <br/>\r\n                    1 Jan 2020</span>\r\n                </div>\r\n                <div className=\"status\">\r\n                    <span>node.js Developer</span>\r\n                </div>\r\n            </div>\r\n        </Swiper>\r\n      );\r\n    }\r\n  }","import React from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Button, Form, FormGroup, Label, Input, Fade } from 'reactstrap';\r\nimport './Board.css';\r\nimport * as firebase from 'firebase';\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardLink,\r\n    CardTitle, CardSubtitle\r\n  } from 'reactstrap';\r\nimport binicon from '../assets/img/bin.svg'\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../assets/img/success.json'\r\nimport success from '../assets/img/success.svg'\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n    Array.from({ length: count }, (v, k) => k).map(k => ({\r\n        id: `item-${k + offset}`,\r\n        content: `item ${k + offset}`\r\n    }));\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    // padding: grid * 2,\r\n    margin: `0 0 ${grid}px 0`,\r\n    borderRadius: 5,\r\n    // change background colour if dragging\r\n    background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getItemCardStyle = (isDragging, draggableStyle) => ({\r\n\r\n    // change background colour if dragging\r\n    // backgroundColor: isDragging ? '#17a2b8' : '#fffff',\r\n    borderColor: isDragging ? '#28a745' : '#fffff',\r\n\r\n    // styles we need to apply on draggables\r\n    // ...draggableStyle\r\n});\r\n\r\nconst getItemCard2Style = (isDragging, draggableStyle) => ({\r\n\r\n    // change background colour if dragging\r\n    // backgroundColor: isDragging ? '#17a2b8' : '#fffff',\r\n    borderColor: isDragging ? '#ffc107' : '#fffff',\r\n\r\n    // styles we need to apply on draggables\r\n    // ...draggableStyle\r\n});\r\n\r\nconst getItemCardTextStyle = (isDragging, draggableStyle) => ({\r\n\r\n    // change background colour if dragging\r\n    color: isDragging ? '#000000' : '#000000',\r\n\r\n    // styles we need to apply on draggables\r\n    // ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n    padding: grid,\r\n    width: 250,\r\n    borderRadius: 10,\r\n    minHeight: 300,\r\n});\r\n\r\nexport default class Broard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            selected: []/*,\r\n            complete: getItems(7, 10)*/\r\n        };\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n      }\r\n\r\n      handleRemove(event) {\r\n        console.log(event.target.value)\r\n        const dataRef = firebase.database()\r\n        const key_value = event.target.value\r\n        dataRef.ref(\"todo\").child(key_value).remove();\r\n      }\r\n\r\n      handleChange(event) {\r\n        const dataRef = firebase.database()\r\n        console.log(event.target.value)\r\n        const key_value = event.target.value\r\n        const isChecked = event.target.checked;\r\n  \r\n        dataRef.ref(\"todo/\"+key_value).update({\r\n          status: isChecked\r\n        }).then(function () {\r\n          console.log(\"success\")\r\n          }, function () {\r\n          console.log('rejected promise')\r\n        }).catch((e) => console.log(e))\r\n      }\r\n\r\n      componentDidMount(){\r\n        const dataList = firebase.database().ref('todo');\r\n        dataList.on('value', (snapshot) => {\r\n          let dataTodo = [];\r\n          let dataCompete = []; \r\n          snapshot.forEach(productSnapshot => {\r\n            let data = productSnapshot.val();\r\n            if (!data.status) {\r\n              dataTodo.push({\r\n                  id:productSnapshot.key,\r\n                  text:data.text,\r\n                  status:data.status,\r\n                  date:data.date\r\n              });\r\n            } else {\r\n                dataCompete.push({\r\n                    id:productSnapshot.key,\r\n                    text:data.text,\r\n                    status:data.status,\r\n                    date:data.date\r\n                });\r\n            }\r\n        });\r\n          this.setState({\r\n            items: dataTodo\r\n          });\r\n          this.setState({\r\n            selected: dataCompete\r\n          });\r\n        });\r\n      }\r\n\r\n    /**\r\n     * A semi-generic way to handle multiple lists. Matches\r\n     * the IDs of the droppable container to the names of the\r\n     * source arrays stored in the state.\r\n     */\r\n    id2List = {\r\n        droppable: 'items',\r\n        droppable2: 'selected'/*\r\n        droppable3: 'complete'*/\r\n    };\r\n\r\n    getList = id => this.state[this.id2List[id]];\r\n\r\n    onDragEnd = result => {\r\n        const { source, destination } = result;\r\n        \r\n\r\n        let key_value = result.draggableId\r\n        console.log('result')\r\n        console.log(key_value)\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(\r\n                this.getList(source.droppableId),\r\n                source.index,\r\n                destination.index\r\n            );\r\n\r\n            let state = { items };\r\n\r\n            if (source.droppableId === 'droppable2') {\r\n                state = { selected: items };\r\n            } \r\n\r\n            this.setState(state);\r\n        } else {\r\n            const result = move(\r\n                this.getList(source.droppableId),\r\n                this.getList(destination.droppableId),\r\n                source,\r\n                destination\r\n            );\r\n            var d = new Date()\r\n            var date = d.toISOString().slice(0,10)\r\n            if (source.droppableId === 'droppable') {\r\n                const dataRef = firebase.database()\r\n                dataRef.ref(\"todo/\"+key_value).update({\r\n                    status: true,\r\n                    date: date\r\n                }).then(function () {\r\n                    console.log(\"success\")\r\n                    }, function () {\r\n                    console.log('rejected promise')\r\n                }).catch((e) => console.log(e))\r\n            } else {\r\n                const dataRef = firebase.database()\r\n                dataRef.ref(\"todo/\"+key_value).update({\r\n                    status: false,\r\n                    date: date\r\n                }).then(function () {\r\n                    console.log(\"success\")\r\n                    }, function () {\r\n                    console.log('rejected promise')\r\n                }).catch((e) => console.log(e)) \r\n            }\r\n\r\n            this.setState({\r\n                items: result.droppable,\r\n                selected: result.droppable2/*,\r\n                complete: result.droppable3*/\r\n            });\r\n        }\r\n    };\r\n    render() {\r\n        const defaultOptions = {\r\n            loop: true,\r\n            autoplay: true, \r\n            animationData: animationData,\r\n            rendererSettings: {\r\n              preserveAspectRatio: 'xMidYMid slice'\r\n            }\r\n        };\r\n        return (\r\n        <div className=\"Board-content\">\r\n           <DragDropContext onDragEnd={this.onDragEnd}>\r\n                    {/* <div className=\"after-box\"> */}\r\n                        <div className=\"box\">\r\n                        <h1>TODO</h1>\r\n                        <Droppable droppableId=\"droppable\">\r\n                            {(provided, snapshot) => (\r\n                                <div\r\n                                    ref={provided.innerRef}\r\n                                    style={getListStyle(snapshot.isDraggingOver)}>\r\n                                    {this.state.items.map((item, index) => (\r\n                                        <Draggable\r\n                                            key={item.id}\r\n                                            draggableId={item.id}\r\n                                            index={index}>\r\n                                            {(provided, snapshot) => (\r\n                                                <div\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                    style={getItemStyle(\r\n                                                        snapshot.isDragging,\r\n                                                        provided.draggableProps.style\r\n                                                    )}>\r\n                                                    <Card style={getItemCardStyle(\r\n                                                        snapshot.isDragging,\r\n                                                        provided.draggableProps.style\r\n                                                    )}>\r\n                                                        <div>\r\n                                                            <label className=\"container-checkbox\">{item.date}\r\n                                                                <input type=\"checkbox\" value={item.id} defaultChecked={false} onChange={this.handleChange}/>\r\n                                                                <span className=\"checkmark\"></span>\r\n                                                                <button className=\"btn-float-right btn-custom\" value={item.id} onClick={this.handleRemove}>\r\n                                                                    X\r\n                                                                </button>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                       \r\n                                                        <CardBody className=\"card-body\">\r\n                                                            <CardText style={getItemCardTextStyle(\r\n                                                                snapshot.isDragging,\r\n                                                                provided.draggableProps.style\r\n                                                            )}>{item.text}</CardText>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </div>\r\n\r\n                                            )}\r\n                                        </Draggable>\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                        <h1>DONE</h1>\r\n                        <Droppable droppableId=\"droppable2\">\r\n                            {(provided, snapshot) => (\r\n                                <div\r\n                                    ref={provided.innerRef}\r\n                                    style={getListStyle(snapshot.isDraggingOver)}>\r\n                                    {this.state.selected.map((item, index) => (\r\n                                        <Draggable\r\n                                            key={item.id}\r\n                                            draggableId={item.id}\r\n                                            index={index}>\r\n                                            {(provided, snapshot) => (\r\n                                                <div\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                    style={getItemStyle(\r\n                                                        snapshot.isDragging,\r\n                                                        provided.draggableProps.style\r\n                                                    )}>\r\n                                                    <Card\r\n                                                        style={getItemCard2Style(\r\n                                                            snapshot.isDragging,\r\n                                                            provided.draggableProps.style\r\n                                                        )}>\r\n                                                        <div>\r\n                                                            {/* <Lottie options={defaultOptions}\r\n                                                            height={50}\r\n                                                            width={50}\r\n                                                            isStopped={this.state.isStopped}\r\n                                                            isPaused={this.state.isPaused}/> */}\r\n                                                            <label className=\"container-checkbox\">{item.date}\r\n                                                                <input type=\"checkbox\" checked=\"checked\" value={item.id} defaultChecked={true} onChange={this.handleChange}/>\r\n                                                                <span className=\"checkmark\"></span>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <CardBody className=\"card-body\">\r\n                                                            <CardText\r\n                                                            style={getItemCardTextStyle(\r\n                                                                snapshot.isDragging,\r\n                                                                provided.draggableProps.style\r\n                                                            )}>{item.text}</CardText>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </div>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                        </div>\r\n                        {/* </div> */}\r\n       </DragDropContext>\r\n       </div>\r\n        );\r\n      }\r\n}","import React from 'react';\r\nimport * as firebase from 'firebase';\r\nimport './ProgressView.css';\r\nimport { Progress } from 'reactstrap';\r\n\r\nexport default class ProgressView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          scrolled: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      window.addEventListener(\"scroll\", this.scrollProgress);\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"scroll\", this.scrollProgress);\r\n    }\r\n  \r\n    scrollProgress = () => {\r\n      const scrollPx = document.documentElement.scrollTop;\r\n      const winHeightPx =\r\n        document.documentElement.scrollHeight -\r\n        document.documentElement.clientHeight;\r\n      const scrolled = `${scrollPx / winHeightPx * 100}`;\r\n  \r\n      console.log(scrolled);\r\n  \r\n      this.setState({\r\n        scrolled: scrolled\r\n      });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"progress\">\r\n           <Progress animated color=\"info\" value={this.state.scrolled} />\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from 'react';\r\nimport './Covid19.css';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button\r\n  } from 'reactstrap';\r\n\r\nexport default class Covid19 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dateAll: [],\r\n            confirmedAll: [],\r\n            deathsAll: [],\r\n            recoveredAll: [],\r\n            date: [],\r\n            confirmed: [],\r\n            deaths: [],\r\n            recovered: [],\r\n            lastDate: '',\r\n            lastConfirmed: 0,\r\n            lastDeaths: 0,\r\n            lastRecovered: 0,\r\n            isHidden: true\r\n        }\r\n\r\n        this.onSwitchChange = this.onSwitchChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let dateCovid = [];\r\n        let dataConfirmed = [];\r\n        let dataRecovered = [];\r\n        let dataDeaths = [];\r\n        let dateCovidAll = [];\r\n        let dataConfirmedAll = [];\r\n        let dataRecoveredAll = [];\r\n        let dataDeathsAll = [];\r\n        let sumConfirmed = {};\r\n        let sumRecovered = {};\r\n        let sumDeaths = {}  \r\n        fetch(\"https://pomber.github.io/covid19/timeseries.json\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // data[\"Thailand\"].forEach(({ date, confirmed, recovered, deaths }) => {\r\n                //         // console.log(`${date} active cases: ${confirmed - recovered - deaths}`);\r\n                //         var d = date.split(\"-\");\r\n                //         var dd = d[2]+\"/\"+d[1]+\"/\"+d[0]\r\n                //         dateCovid.push(date);\r\n                //         dataConfirmed.push(confirmed);\r\n                //         dataRecovered.push(recovered);\r\n                //         dataDeaths.push(deaths);\r\n                //     }  \r\n                // );\r\n                for (const property in data) {\r\n                    //console.log(`${property}: ${data[property]}`);\r\n                    data[property].forEach(({ date, confirmed, recovered, deaths }) => {\r\n                        // console.log(`${date} active cases: ${confirmed - recovered - deaths}`);\r\n                        var d = date.split(\"-\");\r\n                        var dd = d[2]+\"/\"+d[1]+\"/\"+d[0]\r\n                        // dateCovidAll.push(dd);\r\n                        // dataConfirmedAll.push(confirmed);\r\n                        // dataRecoveredAll.push(recovered);\r\n                        // dataDeathsAll.push(deaths);\r\n                        try {\r\n                            if (typeof sumConfirmed[dd] != 'undefined') {\r\n                                sumConfirmed[dd] = sumConfirmed[dd] + confirmed\r\n                                sumRecovered[dd] = sumRecovered[dd] + recovered\r\n                                sumDeaths[dd] = sumDeaths[dd] + deaths\r\n                            } else {\r\n                                sumConfirmed[dd] =  confirmed\r\n                                sumRecovered[dd] = recovered\r\n                                sumDeaths[dd] = deaths\r\n                            }\r\n                        }catch(err) {\r\n\r\n                        }\r\n                        \r\n                        if (property == \"Thailand\") {\r\n                            dateCovid.push(dd);\r\n                            dataConfirmed.push(confirmed);\r\n                            dataRecovered.push(recovered);\r\n                            dataDeaths.push(deaths);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                for (const key in sumConfirmed) {\r\n                    console.log(key+\":\"+sumConfirmed[key])\r\n                    dataConfirmedAll.push(sumConfirmed[key])\r\n                    dataRecoveredAll.push(sumRecovered[key])\r\n                    dataDeathsAll.push(sumDeaths[key])\r\n                }\r\n\r\n                this.setState({\r\n                    dateAll: dateCovidAll,\r\n                    confirmedAll: dataConfirmedAll,\r\n                    recoveredAll: dataRecoveredAll,\r\n                    deathsAll: dataDeathsAll,\r\n                    date: dateCovid,\r\n                    confirmed: dataConfirmed,\r\n                    recovered: dataRecovered,\r\n                    deaths: dataDeaths,\r\n                    lastDate: dateCovid[dateCovid.length-1],\r\n                    lastConfirmed: dataConfirmed[dataConfirmed.length-1],\r\n                    lastDeaths: dataDeaths[dataDeaths.length-1],\r\n                    lastRecovered: dataRecovered[dataRecovered.length-1]\r\n                })   \r\n            });\r\n    }\r\n\r\n    onSwitchChange(event) {\r\n        this.setState({ isHidden: !this.state.isHidden });\r\n    }\r\n\r\n    render() {\r\n        const dataLine = {\r\n            labels: this.state.date,\r\n            datasets: [\r\n              {\r\n                label: 'ผู้ติดเชื้อ',\r\n                fill: false,\r\n                hidden: !this.state.isHidden,\r\n                lineTension: 0,\r\n                backgroundColor: '#EEEE14',\r\n                borderColor: '#EEEE14',\r\n                borderCapStyle: 'round',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'round',\r\n                pointBorderColor: '#EEEE14',\r\n                pointBackgroundColor: '#EEEE14',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#EEEE14',\r\n                pointHoverBorderColor: '#EEEE14',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: this.state.confirmed\r\n              },\r\n              {\r\n                label: 'หายแล้ว',\r\n                fill: false,\r\n                hidden: !this.state.isHidden,\r\n                lineTension: 0,\r\n                backgroundColor: '#10F244',\r\n                borderColor: '#10F244',\r\n                borderCapStyle: 'round',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'round',\r\n                pointBorderColor: '#10F244',\r\n                pointBackgroundColor: '#10F244',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#10F244',\r\n                pointHoverBorderColor: '#10F244',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 0,\r\n                pointHitRadius: 10,\r\n                data: this.state.recovered\r\n              },\r\n              {\r\n                label: 'เสียชีวิต',\r\n                fill: false,\r\n                hidden: !this.state.isHidden,\r\n                lineTension: 0,\r\n                backgroundColor: '#FF3349',\r\n                borderColor: '#FF3349',\r\n                borderCapStyle: 'round',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'round',\r\n                pointBorderColor: '#FF3349',\r\n                pointBackgroundColor: '#FF3349',\r\n                pointBorderWidth: 0,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#FF3349',\r\n                pointHoverBorderColor: '#FF3349',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 0,\r\n                pointHitRadius: 10,\r\n                data: this.state.deaths\r\n              },\r\n              {\r\n                label: 'ผู้ติดเชื้อทั้งหมด',\r\n                fill: false,\r\n                hidden: this.state.isHidden,\r\n                lineTension: 0,\r\n                backgroundColor: '#FF5733',\r\n                borderColor: '#FF5733',\r\n                borderCapStyle: 'round',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'round',\r\n                pointBorderColor: '#FF5733',\r\n                pointBackgroundColor: '#FF5733',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#FF5733',\r\n                pointHoverBorderColor: '#FF5733',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 0,\r\n                pointHitRadius: 10,\r\n                data: this.state.confirmedAll\r\n              },\r\n              {\r\n                label: 'หายแล้วทั้งหมด',\r\n                fill: false,\r\n                hidden: this.state.isHidden,\r\n                lineTension: 0,\r\n                backgroundColor: '#3498DB',\r\n                borderColor: '#3498DB',\r\n                borderCapStyle: 'round',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'round',\r\n                pointBorderColor: '#3498DB',\r\n                pointBackgroundColor: '#3498DB',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#3498DB',\r\n                pointHoverBorderColor: '#3498DB',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 0,\r\n                pointHitRadius: 10,\r\n                data: this.state.recoveredAll\r\n              },\r\n              {\r\n                label: 'เสียชีวิตทั้งหมด',\r\n                fill: false,\r\n                hidden: this.state.isHidden,\r\n                lineTension: 0,\r\n                backgroundColor: '#5B2C6F',\r\n                borderColor: '#5B2C6F',\r\n                borderCapStyle: 'round',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'round',\r\n                pointBorderColor: '#5B2C6F',\r\n                pointBackgroundColor: '#5B2C6F',\r\n                pointBorderWidth: 0,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: '#5B2C6F',\r\n                pointHoverBorderColor: '#5B2C6F',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 0,\r\n                pointHitRadius: 10,\r\n                data: this.state.deathsAll\r\n              }\r\n            ]\r\n          };\r\n\r\n          const legendOpts = {\r\n            display: true,\r\n            position: 'bottom',\r\n            fullWidth: true,\r\n            reverse: false,\r\n            labels: {\r\n              fontColor: '#000000'\r\n            }\r\n          };\r\n\r\n          const options = {\r\n            bezierCurve: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: { display: false },\r\n                    gridLines: {\r\n                        display: false,\r\n                        drawBorder: false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: { display: false },\r\n                    gridLines: {\r\n                        display: false,\r\n                        drawBorder: false\r\n                    }\r\n                }]\r\n            }\r\n          };\r\n        return (\r\n            <Container fluid={true}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <h3>อัพเดตตัวเลขผู้ติดเชื้อ COVID-19 ในประเทศไทย</h3>\r\n                        <p className=\"text-last-update\">วันที่อัพเดพล่าสุด {this.state.lastDate}</p>\r\n                        <div className=\"switch-center\">\r\n                            <label class=\"switch\">\r\n                                <input type=\"checkbox\" defaultChecked={!this.state.isHidden} onChange={this.onSwitchChange}/>\r\n                                <span class=\"slider round\"></span>\r\n                            </label>\r\n                            <label className=\"text-switch\">ข้อมูลทั่วโลก</label>\r\n                        </div>\r\n                        <Line data={dataLine} legend={legendOpts} options={options} />\r\n                        <br/>\r\n                        <Row>\r\n                            <Col xs=\"4\" className=\"padding-right0\">\r\n                                <Card>\r\n                                    <CardBody className=\"card-padding-covid\">\r\n                                    <CardTitle className=\"card-title-covid\">ผู้ติดเชื้อ</CardTitle>\r\n                                    <CardSubtitle>{this.state.lastConfirmed}</CardSubtitle>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col xs=\"4\" className=\"padding-right0\">\r\n                                <Card>\r\n                                    <CardBody className=\"card-padding-covid\">\r\n                                    <CardTitle className=\"card-title-covid\">หายแล้ว</CardTitle>\r\n                                    <CardSubtitle>{this.state.lastRecovered}</CardSubtitle>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col xs=\"4\">\r\n                                <Card>\r\n                                    <CardBody className=\"card-padding-covid\">\r\n                                    <CardTitle className=\"card-title-covid\">เสียชีวิต</CardTitle>\r\n                                    <CardSubtitle>{this.state.lastDeaths}</CardSubtitle>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col md=\"6\" className=\"p-center\">\r\n                        <p>\r\n                            \"หมีไซเบอร์ร่วมเป็นส่วนหนึ่งในการส่งกำลังใจ ให้กับแพทย์ พยายาลให้มีกำลังใจการทำงาน และขอให้ประเทศผ่านวิกิตครั้งนี้ไปได้ด้วยดีนะครับ\"\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n// import logo from './logo.svg';\r\nimport duck from '../assets/img/duck.svg';\r\nimport profile from '../assets/img/profile.jpg';\r\nimport facebook from '../assets/img/facebook.svg';\r\nimport instagram from '../assets/img/instagram.svg';\r\nimport twitter from '../assets/img/twitter.svg';\r\nimport github from '../assets/img/github.svg'\r\nimport '../App.css';\r\nimport './Main.css'\r\n// import { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport TodoApp from './TodoApp';\r\nimport logoboxshop from '../assets/img/theboxapp.png'\r\nimport { Link } from 'react-router-dom';\r\nimport Timeline from './Timeline'\r\n\r\nimport Lottie from 'react-lottie';\r\nimport animationData from '../assets/img/analytics.json'\r\nimport Board from './Board'\r\nimport duck_logo from '../assets/img/duck-blue-style.json';\r\nimport logo from '../logo2.svg';\r\nimport sport from '../assets/img/sport.svg';\r\nimport ProgressView from './ProgressView'\r\nimport Covid19 from './Covid19'\r\n\r\nexport default class Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.handleScrollToElement = this.handleScrollToElement.bind(this);\r\n    let d = new Date()\r\n    this.state = {\r\n      day: d.getDay(),\r\n      month: d.getMonth() + 1 < 10 ? \"0\"+(d.getMonth()+1): d.getMonth()+1,\r\n      date: d.getDate() < 10 ? \"0\"+d.getDate() : d.getDate(),\r\n      year: d.getFullYear(),\r\n      time: d.toLocaleTimeString(),\r\n      value: 0, \r\n      previous: 0,\r\n      isStopped: false, \r\n      isPaused: false,\r\n      speed: 1,\r\n      isClick: true\r\n    }\r\n    this.countingSecond = this.countingSecond.bind(this)\r\n  }\r\n\r\n  countingSecond() {\r\n    let d = new Date()\r\n    this.setState({\r\n      day: d.getDay(),\r\n      month: d.getMonth() + 1 < 10 ? \"0\"+(d.getMonth()+1): d.getMonth()+1,\r\n      date: d.getDate() < 10 ? \"0\"+d.getDate() : d.getDate(),\r\n      year: d.getFullYear(),\r\n      time: d.toLocaleTimeString()\r\n    })\r\n  }\r\n  componentWillMount() {\r\n    setInterval(this.countingSecond, 1000)\r\n  }\r\n\r\n  handleScrollToElement(event) {\r\n    if (this.state.isClick) {\r\n      this.setState({isClick: false})\r\n      let timerId = setInterval(()=>{\r\n        let timer = this.state.speed + 1.5\r\n        this.setState({speed: timer})\r\n        if (timer > 4){\r\n          window.scrollTo(0, this.myRef.current.offsetTop);\r\n          this.setState({speed: 1,isClick: true})\r\n          clearInterval(timerId)\r\n        }\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n    render() {\r\n      const defaultOptions = {\r\n          loop: true,\r\n          autoplay: true, \r\n          animationData: animationData,\r\n          rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n          }\r\n      };\r\n\r\n      const duckfollow = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: duck_logo,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n        return (\r\n            <div className=\"App\">\r\n              <ProgressView/>\r\n            <section>\r\n              <header className=\"App-header\">\r\n                {/* <img src={duck} className=\"App-logo\" alt=\"logo\" /> */}\r\n                <Lottie options={duckfollow}\r\n                  height={300}\r\n                  width={300}\r\n                  speed={this.state.speed}\r\n                  isStopped={this.state.isStopped}\r\n                  isPaused={this.state.isPaused}/>\r\n                <p>\r\n                  Edit <code>src/App.js</code> and save to reload.\r\n                </p>\r\n                <a\r\n                  className=\"button-speed noselect\"\r\n                  onClick={this.handleScrollToElement}\r\n                  rel=\"noopener noreferrer\">\r\n                  <img className=\"icon-btn-speed\" src={sport}/>Click to Learn React\r\n                </a>\r\n              </header>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                <Covid19/>\r\n              </div>\r\n            </section>\r\n            <section ref={this.myRef}>\r\n              <div className=\"App-content\">\r\n                <img src={profile} className=\"img-circle img-profile noselect\" alt=\"logo\" />\r\n                <p className=\"noselect\">\r\n                  Prasit Suphancho\r\n                </p>\r\n                <div>\r\n                <a href=\"https://github.com/DuckFollowTK\">\r\n                    <img src={github} className=\"social-width\" alt=\"logo\" />\r\n                  </a>\r\n                  <a href=\"https://www.facebook.com/p.supancho\">\r\n                    <img src={facebook} className=\"social-width\" alt=\"logo\" />\r\n                  </a>\r\n                  <a href=\"https://www.instagram.com/tankps/\">\r\n                    <img src={instagram} className=\"social-width\" alt=\"logo\" />\r\n                  </a>\r\n                  <a href=\"https://twitter.com/slammonder\">\r\n                    <img src={twitter} className=\"social-width\" alt=\"logo\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                <h1 className=\"noselect\">made application</h1>\r\n                <div>\r\n                  {/* <a href=\"\">\r\n                    <img src={logoboxshop} className=\"app-icon\" alt=\"logo\" />\r\n                  </a>\r\n                  <a href=\"\">\r\n                    <img src={logoboxshop} className=\"app-icon\" alt=\"logo\" />\r\n                  </a>\r\n                  <a href=\"\">\r\n                    <img src={logoboxshop} className=\"app-icon\" alt=\"logo\" />\r\n                  </a> */}\r\n                </div>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                <TodoApp/>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <Board/>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                <h1 className=\"noselect\">{this.state.date}:{this.state.month}:{this.state.year}:{this.state.time}</h1>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n               <Timeline/>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                <h1 className=\"noselect\">Products</h1>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                <div>\r\n                  <a id=\"theboxshop\" href=\"https://play.google.com/store/apps/details?id=com.prasit.theboxshop\" target=\"_blank\">\r\n                    <img src=\"https://lh3.googleusercontent.com/WZeG1MyE8bpBt1cHMBAuoRUghGOWE23P7Ji28yMyUWF-90kTy6GPgDOm0rqvvgYOx-E=s180-rw\"/>\r\n                  </a>\r\n                  <a id=\"shopmanager\" href=\"https://play.google.com/store/apps/details?id=com.prasit.shopmanager\" target=\"_blank\">\r\n                    <img src=\"https://lh3.googleusercontent.com/kuN3ko72k14yuetGz21EFJrekBQC5Gat_3WWVhFaWasm8aLHDh6KdYIUsji_9thZu2wb=s180-rw\"/>\r\n                  </a>\r\n                  <a id=\"ozone\" href=\"https://play.google.com/store/apps/details?id=me.duckfollow.ozone\" target=\"_blank\">\r\n                    <img src=\"https://lh3.googleusercontent.com/4D1CU1oKP1RRC4NX45ZGbYGd9AuqpiYpTMDxuUi1iLwN8KG4PGEt3jjmJ8zyUWeLVLo=s180-rw\"/>\r\n                  </a>\r\n                  <a id=\"qrcode\" href=\"https://play.google.com/store/apps/details?id=me.duckfollow.qrcode\" target=\"_blank\">\r\n                    <img src=\"https://lh3.googleusercontent.com/woEQJUcdb0M8O96zNuGnEhhn2uJBS4h1GkmTaJSxePzjFm6nhHeLToPuFF8_AU9sras=s180-rw\"/>\r\n                  </a>\r\n                </div>\r\n                <UncontrolledPopover trigger=\"hover\" placement=\"bottom\" target=\"theboxshop\">\r\n                  <PopoverHeader>The Box Shop เปิดร้านค้าออนไลน์</PopoverHeader>\r\n                  <PopoverBody>เปิดร้านค้าออไลน์ได้ง่ายๆ มาพร้อมบริการจัดการหน้าร้าน</PopoverBody>\r\n                </UncontrolledPopover>\r\n                <UncontrolledPopover trigger=\"hover\" placement=\"bottom\" target=\"shopmanager\">\r\n                  <PopoverHeader>krap krap จัดการร้านค้า</PopoverHeader>\r\n                  <PopoverBody>ระบบจัดการคิวร้านค้า พร้อม E-Slip</PopoverBody>\r\n                </UncontrolledPopover>\r\n                <UncontrolledPopover trigger=\"hover\" placement=\"bottom\" target=\"ozone\">\r\n                  <PopoverHeader>ozone not included ตรวจฝุ่น PM 2.5</PopoverHeader>\r\n                  <PopoverBody>วัดระดับค่าฝุ่น PM 2.5</PopoverBody>\r\n                </UncontrolledPopover>\r\n                <UncontrolledPopover trigger=\"hover\" placement=\"bottom\" target=\"qrcode\">\r\n                  <PopoverHeader>สร้าง QR Code</PopoverHeader>\r\n                  <PopoverBody>สร้างและแสกน QR Code</PopoverBody>\r\n                </UncontrolledPopover>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                  <img src={logo} width={200} height={200} id=\"PopoverLegacy\"/>\r\n                  <UncontrolledPopover trigger=\"hover\" placement=\"top\" target=\"PopoverLegacy\">\r\n                    {/* <PopoverHeader>Legacy Trigger</PopoverHeader> */}\r\n                    <PopoverBody>\r\n                      Thank You for dowload.</PopoverBody>\r\n                  </UncontrolledPopover>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                  <h1 className=\"ux-ui noselect\">UX/UI</h1>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                 \r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n                  <h1 className=\"event-text noselect\">EVENTS</h1>\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"App-content\">\r\n              <Lottie options={defaultOptions}\r\n                height={300}\r\n                width={300}\r\n                isStopped={this.state.isStopped}\r\n                isPaused={this.state.isPaused}/>\r\n              <Link to=\"/policy-privacy\">policy-privacy</Link>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        );\r\n      }\r\n}","import React from 'react';\r\nimport './Policy.css';\r\nimport { Badge } from 'reactstrap';\r\nimport shield from '../assets/img/shield.svg'\r\n\r\nexport default class Policy extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section>\r\n                    <div className=\"App-content\">\r\n                        <img src={shield} className=\"img-protect\"/>\r\n                        <br/>\r\n                        <h1>Policy <Badge color=\"secondary\">privacy</Badge></h1>\r\n                        <p className=\"txt-policy-size\">นโยบายความเป็นความตัวของเรา</p>\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <div className=\"Policy-content\">\r\n                        <h3>เมื่อคุณใช้บริการของเรา คุณไว้วางใจให้เรารักษาข้อมูลของคุณ เราเข้าใจว่านี่คือความรับผิดชอบที่ยิ่งใหญ่ และพยายามอย่างยิ่งที่จะปกป้องข้อมูลของคุณ รวมถึงมอบอำนาจในการควบคุมข้อมูลให้แก่คุณ</h3>\r\n                        <br/>\r\n                        <p>นโยบายความเป็นส่วนตัวนี้มีไว้เพื่อช่วยให้คุณทราบประเภทข้อมูลที่เรารวบรวม เหตุผลที่เรารวบรวม รวมถึงวิธีที่คุณจะอัปเดตข้อมูลดังกล่าว</p>\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <div className=\"Policy-content\">\r\n                        <p>เราสร้างบริการหลายอย่างที่ช่วยให้ผู้คนหลายล้านคนสำรวจและโต้ตอบกับโลกด้วยวิธีใหม่ๆ ได้ในทุกๆ วัน บริการของเรามีดังนี้</p>\r\n                        <ul>\r\n                            <li>พัฒนาโมบายแอปพลิเคชัน</li>\r\n                            <li>พัฒนาเว็บไซต์</li>\r\n                        </ul>\r\n                        <br/>\r\n                        <p>เรารวบข้อมูลต่างๆ เพื่อนำมาใช้ในการปรับปรุงแอปพลิเคชัน เพื่อให้ผู้ใช้งานมีประสบการณ์ใช้งานที่ดีต่อแอปพลิเคชัน และเราจะให้ความสำคัญต่อการใช้งานเป็นหลัก และการปกป้องข้อมูล ความเป็นส่วนตัวของผู้ใช้งาน และอาจจะมีการเปลี่ยนแปลงนโยบายความเป็นส่วนตัวตามความเหมาะสม</p>\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <div className=\"Policy-content\">\r\n                        <h1>บริการบางอย่างของเรา</h1>\r\n                        <p>ประกาศเกี่ยวกับนโยบายความเป็นส่วนตัวต่อไปนี้มีข้อมูลเพิ่มเติมเกี่ยวกับบริการบางอย่างของเรา</p>\r\n                        <ul>\r\n                            <li><a href=\"https://play.google.com/store/apps/details?id=com.prasit.theboxshop\" target=\"_blank\">the box shop เปิดร้านค้าออนไลน์</a></li>\r\n                            <li><a href=\"https://play.google.com/store/apps/details?id=me.duckfollow.ozone\" target=\"_blank\">ozone not included ตรวจระดับฝุ่น PM 2.5</a></li>\r\n                            <li><a href=\"https://play.google.com/store/apps/details?id=com.prasit.shopmanager\" target=\"_blank\">krap krap จัดการร้านค้า</a></li>\r\n                            <li><a href=\"https://play.google.com/store/apps/details?id=me.duckfollow.qrcode\" target=\"_blank\">แสกน QR Code</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n      }\r\n}","import React from 'react';\r\nimport { HashRouter, Route, Link } from \"react-router-dom\";\r\nimport Main from './components/Main'\r\nimport Policy from './components/Policy'\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <ScrollToTop/>\r\n      <div>\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Route path=\"/policy-privacy\" component={Policy} />\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\r\nimport * as firebase from \"firebase/app\";\r\nimport 'swiper/css/swiper.css'\r\n// import 'swiper/swiper.scss'\r\n// import 'swiper/swiper.less'\r\n// import \"firebase/auth\";\r\n// import {\r\n//   FirebaseAuthProvider,\r\n//   FirebaseAuthConsumer,\r\n//   IfFirebaseAuthed,\r\n//   IfFirebaseAuthedAnd\r\n// } from \"@react-firebase/auth\";\r\n\r\nimport { firebaseConfig } from \"./FirebaseConfig\";\r\n// import Swiper from 'swiper';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <FirebaseDatabaseProvider {...firebaseConfig} firebase={firebase}>\r\n        <App />\r\n    </FirebaseDatabaseProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// new Swiper('.swiper-container', {\r\n//   pagination: '.swiper-pagination',\r\n//   slidesPerView: 4,\r\n//   paginationClickable: true,\r\n//   grabCursor: true,\r\n//   paginationClickable: true,\r\n//   nextButton: '.next-slide',\r\n//   prevButton: '.prev-slide',\r\n// }); \r\n","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyCEzUYXFx4zS4t_GiRGcalbB1d5yNHC5GE\",\r\n    authDomain: \"strange-descent-177108.firebaseapp.com\",\r\n    databaseURL: \"https://strange-descent-177108.firebaseio.com\",\r\n    projectId: \"strange-descent-177108\",\r\n    storageBucket: \"strange-descent-177108.appspot.com\",\r\n    messagingSenderId: \"694246627101\",\r\n    appId: \"1:694246627101:web:8ada8096e2950e19\"\r\n  };\r\n"],"sourceRoot":""}